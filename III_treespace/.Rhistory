#Finally adding a title
title <- ggdraw() + draw_label("Species Trees Landscape", fontface='bold', size = 18)
sp_tree_plot <- plot_grid(title, two_plots_onelegend, ncol=1, rel_heights=c(.1, 1.5))
sp_tree_plot
#tree <- read.nexus("genetrees.nex")
#first let's confirm we dropped the tips of species that are not present in all trees and let's unroot the tree
#tree_gerf <- lapply(tree, drop.tip, c("Caryophyllales_Caryophyllaceae_Silene_capitata", "Myrtales_Myrtaceae_Xanthostemon_chrysanthus", "Fabales_Polygalaceae_Polygala_polygama"))
#class(tree)
#class(tree) <- "multiPhylo"
#class(tree)
#tree <- unroot(tree)
#write.tree(tree, file="genetrees_unrooted.nwk", d=0)
tree_gerf <- read.nexus("./input_unrooted/all_spgenetree_ge_rf.nex")
class(tree_gerf)
tree_names_gerf <- names(tree_gerf)
tree_names_gerf
is.rooted.multiPhylo(tree_allspp_nrtd)
method_gerf <- read.csv("all_spgenetree.csv", h=F)
class(method_gerf)
#Calculating the distances
treespace_gerf <- treespace(tree_gerf,  method = "RF", nf=66)
#head(treespace_gerf)
#head(treespace_gerf$pco$li)
plotGrovesD3(treespace_gerf$pc, treeNames = tree_names_gerf)
#Detecting the number of groups
#id_cluster_gerf <- findGroves(treespace_gerf, method = "RF")
#250
#y
id_cluster_gerf <- findGroves(treespace_gerf, method = "RF", nclust = 2)
plotGrovesD3(id_cluster_gerf, treeNames = tree_names_gerf)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_gerf <- data.frame(id_cluster_gerf$treespace$pco$li, dataset=tree_names_gerf, Method=method_gerf$V1,
group=id_cluster_gerf$groups, name=rownames(id_cluster_gerf$treespace$pco$li))
#head(df_gerf)
#The names of all gene trees
#df_gerf["sptree_vs_getree_1"] <- c("as", "sv", "c", "gp", "bs", "atpA", "atpB", "atpE", "atpF", "atpH", "atpI", "cemA", "matK", "ndhA", "ndhB", "ndhC", "ndhD", "ndhE", "ndhF", "ndhG", "ndhI", "ndhJ", "petB", "petD", "petG", "petL", "petN", "psaA", "psaB", "psaC", "psaI", "psaJ", "psbA", "psbB", "psbC", "psbD", "psbE", "psbF", "psbH", "psbI", "psbJ ", "psbK ", "psbM", "psbN", "psbT", "psbZ", "rbcL", "rpl14", "rpl20", "rpl23", "rpl2", "rpl33", "rpl36", "rpoB", "rpoC1", "rpoC2", "rps11", "rps12", "rps14", "rps15", "rps18", "rps2", "rps3", "rps4", "rps7", "rps8", "ycf3" )
#head(df_gerf)
df_gerf["sptree_vs_getree"] <- c("as", "sv", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_gerf)
df_gerf["sptree_vs_getree"] <- c("as", "sv", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_gerf)
#change order to avoid overlapping
df2_ge_arrangedrf <- arrange(df_gerf, desc(Method))
#head(df2_ge_arrangedrf)
#getting the name for the legend
#colnames(df2_ge_arrangedrf$Method)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_gerf$pco$eig/sum(treespace_gerf$pco$eig),3)
#Axis1 = 0.157, Axis2 = 0.049, Axis3 = 0.042, Axis4 = 0.041, Axis5 = 0.040
#Now we plot the graph
df2_ge_arrangedrf$Method <- factor(df2_ge_arrangedrf$Method, levels(df2_ge_arrangedrf$Method)[c(1,6,2:5)])
plot_RF_ge <- ggplot(df2_ge_arrangedrf, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method),alpha=.8, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=6, box.padding=2, point.padding = 0.8, show.legend=FALSE) +
labs(x="PCoA1 (15.7%)", y=" PCoA2 (4.9%)") +
theme_classic() + ggtitle("Robinson-Foulds - gene") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15),
plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold"))  +
scale_colour_manual(values = c("#000000", "#E69F00", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17, 17, 19, 19, 19, 19))
plot_RF_ge
tree_gekc <- read.nexus("./input_rooted/all_spgenetree_ge_kc.nex")
tree_gekc
tree_gekc <- root(tree_gekc, "Apiales_Araliaceae_Aralia_undulata", resolve.root = TRUE)
class(tree_gekc)
is.rooted.multiPhylo(tree_gekc)
tree_names_gekc <- names(tree_gekc)
tree_names_gekc
#This is to identify metadata
method_gekc <- read.csv("all_spgenetree.csv", h=F)
#Calculating the treespace
treespace_gekc <- treespace(tree_gekc, nf=66)
#head(treespace_gekc)
#head(treespace_gekc$pco$li)
plotGrovesD3(treespace_gekc$pc, treeNames = tree_names_gekc)
#Calculating the treespace
treespace_gekc <- treespace(tree_gekc, nf=66)
#head(treespace_gekc)
#head(treespace_gekc$pco$li)
plotGrovesD3(treespace_gekc$pc, treeNames = tree_names_gekc)
#Calculating the treespace
treespace_gekc <- treespace(tree_gekc, nf=66)
#head(treespace_gekc)
#head(treespace_gekc$pco$li)
plotGrovesD3(treespace_gekc$pc, treeNames = tree_names_gekc)
#Detecting the number of groups
#id_cluster_gekc <- findGroves(treespace_gekc)
#600
#y
id_cluster_gekc <- findGroves(treespace_gekc, nclust = 2)
plotGrovesD3(id_cluster_gekc)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_gekc <- data.frame(id_cluster_gekc$treespace$pco$li, dataset=tree_names_gekc, Method=method_gekc$V1,
group=id_cluster_gekc$groups, name=rownames(id_cluster_gekc$treespace$pco$li))
#head(df_gekc)
df_gekc["sptree_vs_getree"] <- c("as", "sv", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_gekc)
#change order to avoid overlapping
df2_ge_arrangedkc <- arrange(df_gekc, desc(Method))
#head(df2_ge_arrangedkc)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_gekc$pco$eig/sum(treespace_gekc$pco$eig),3)
#Axis1 = 0.515, Axis2 = 0.082, Axis3 = 0.060, Axis4 = 0.048, Axis5 = 0.032
#Now we plot the graph
df2_ge_arrangedkc$Method <- factor(df2_ge_arrangedkc$Method, levels(df2_ge_arrangedkc$Method)[c(1,6,2:5)])
plot_KC_ge <- ggplot(df2_ge_arrangedkc, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method), alpha=.8, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=6, box.padding=2, point.padding = 0.9, show.legend=FALSE) +
labs(x="PCoA1 (51.5%)", y=" PCoA2 (8.2%)") +
theme_classic() + ggtitle("Kendall-Colijn - gene") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15),
plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold"))  +
scale_colour_manual(values = c("#000000", "#E69F00", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17, 17, 19, 19, 19, 19))
plot_KC_ge
getwd()
setwd(getwd())
setwd(getwd())
#first let's confirm we dropped the tips of species that are not present in all trees and let's unroot the tree
#tree_aarf <- lapply(tree_aarf, drop.tip, c("Caryophyllales_Caryophyllaceae_Silene_capitata",
#                                           "Myrtales_Myrtaceae_Xanthostemon_chrysanthus",
#                                           "Fabales_Polygalaceae_Polygala_polygama"))
#class(tree_aarf)
#class(tree_aarf) <- "multiPhylo"
#class(tree_aarf)
#tree_aarf <- unroot(tree_aarf)
#write.tree(tree_aarf, file="genetrees_aa_unrooted.nwk", d=0)
tree_aarf <- read.nexus("./input_unrooted/all_spgenetree_aa_rf.nex")
class(tree_aarf)
is.rooted.multiPhylo(tree_aarf)
tree_names_aarf <- names(tree_aarf)
tree_names_aarf
#This is to identify metadata
method_aarf <- read.csv("all_spgenetree_aa.csv", h=F)
#Calculating the treespace
treespace_aarf <- treespace(tree_aarf,  method = "RF", nf=65)
#head(treespace_aarf)
#head(treespace_aarf$pco$li)
plotGrovesD3(treespace_aarf$pc, treeNames = tree_names_aarf)
#Detecting the number of groups
#id_cluster_aarf <- findGroves(treespace_aarf, , method = RF)
#300
#y
id_cluster_aarf <- findGroves(treespace_aarf, , method = RF, nclust = 2)
plotGrovesD3(id_cluster_aarf)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_aarf <- data.frame(id_cluster_aarf$treespace$pco$li, dataset=tree_names_aarf, Method=method_aarf$V1, group=id_cluster_aarf$groups, name=rownames(id_cluster_aarf$treespace$pco$li))
#head(df_aarf)
df_aarf["sptree_vs_getree"] <- c("as", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_aarf)
#change order to avoid overlapping
df2_aa_arrangedrf <- arrange(df_aarf, desc(Method))
#head(df2_aa_arrangedrf)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_aarf$pco$eig/sum(treespace_aarf$pco$eig),3)
#Axis1 = 0.168, Axis2 = 0.029, Axis3=0.027, Axis4=0.026, Axis5=0.025
#Now we plot the graph
#the next line is not necessary here because we don't have svdq_aa
df2_aa_arrangedrf$Method <- factor(df2_aa_arrangedrf$Method, levels(df2_aa_arrangedrf$Method)[c(1,2:5)])
plot_RF_aa <- ggplot(df2_aa_arrangedrf, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method), alpha=.8, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=6, box.padding=2, point.padding = 0.8, show.legend=FALSE) +
labs(x="PCoA1 (16.8%)", y=" PCoA2 (2.9%)") +
theme_classic() + ggtitle("Robinson-Foulds - amino acid") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold"))  +
scale_colour_manual(values = c("#000000", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17,19, 19, 19, 19))
plot_RF_aa
#KC (amino acid matrix)
tree_aa <- read.nexus("./input_rooted/all_spgenetree_aa_kc.nex")
tree_aa
tree_aa <- root(tree_aa, "Apiales_Araliaceae_Aralia_undulata", resolve.root = TRUE)
is.rooted.multiPhylo(tree_aa)
#KC (amino acid matrix)
tree_aa <- read.nexus("./input_rooted/all_spgenetree_aa_kc.nex")
tree_aa
tree_aa <- root(tree_aa, "Apiales_Araliaceae_Aralia_undulata", resolve.root = TRUE)
is.rooted.multiPhylo(tree_aa)
class(tree_aa)
tree_names_aa <- names(tree_aa)
tree_names_aa
#This is to identify metadata
method_aa <- read.csv("all_spgenetree_aa.csv", h=F)
#Calculating the treespace
treespace_aa <- treespace(tree_aa, nf=65)
#head(treespace_aa)
#head(treespace_aa$pco$li)
plotGrovesD3(treespace_aa$pc, treeNames = tree_names_aa)
#Detecting the number of groups
#id_cluster_aa <- findGroves(treespace_aa)
#1000
#y
id_cluster_aa <- findGroves(treespace_aa, nclust = 3)
plotGrovesD3(id_cluster_aa, treeNames = tree_names_aa)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_aa <- data.frame(id_cluster_aa$treespace$pco$li, dataset=tree_names_aa, Method=method_aa$V1,
group=id_cluster_aa$groups, name=rownames(id_cluster_aa$treespace$pco$li))
#head(df_aa)
df_aa["sptree_vs_getree"] <- c("as", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_aa)
#change order to avoid overlapping
df2_aa_arranged <- arrange(df_aa, desc(Method))
#head(df2_aa_arranged)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_aa$pco$eig/sum(treespace_aa$pco$eig),3)
#Axis1 = 0.264; Axis2 = 0.106, Axis3 = 0.083, Axis4 = 0.061, Axis5 = 0.042
#Now we plot the graph
plot_KC_aa <- ggplot(df2_aa_arranged, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method), alpha=.8, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=6, box.padding=2, point.padding = 0.8, show.legend=FALSE) +
labs(x="PCoA1 (26.4%)", y=" PCoA2 (10.6%)") +
theme_classic() + ggtitle("Kendall-Colijn - amino acid") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold"))  +
scale_colour_manual(values = c("#000000", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17, 19, 19, 19, 19))
plot_KC_aa
tree_exrf <- read.nexus("./input_unrooted/all_spgenetree_ex_rf.nex")
is.rooted.multiPhylo(tree_exrf)
tree_names_exrf <- names(tree_exrf)
tree_names_exrf
#This is to identify metadata
method_exrf <- read.csv("all_spgenetree.csv", h=F)
class(method_exrf)
#Calculating the treespace
treespace_exrf <- treespace(tree_exrf,  method = "RF", nf=66)
#head(treespace_exrf)
#head(treespace_exrf$pco$li)
plotGrovesD3(treespace_exrf$pc, treeNames = tree_names_exrf)
#Detecting the number of groups
#id_cluster_exrf <- findGroves(treespace_exrf, method = "RF")
#250
#y
id_cluster_exrf <- findGroves(treespace_exrf, method = "RF", nclust = 2)
plotGrovesD3(id_cluster_exrf, treeNames = tree_names_exrf)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_exrf <- data.frame(id_cluster_exrf$treespace$pco$li, dataset=tree_names_exrf, Method=method_exrf$V1,
group=id_cluster_exrf$groups, name=rownames(id_cluster_exrf$treespace$pco$li))
#head(df_exrf)
df_exrf["sptree_vs_getree"] <- c("as", "sv", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_exrf)
#change order to avoid overlapping
df2_ex_arrangedrf <- arrange(df_exrf, desc(Method))
#head(df2_ex_arrangedrf)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_exrf$pco$eig/sum(treespace_exrf$pco$eig),3)
#Axis1 = 0.147; Axis2 = 0.050, Axis3 = 0.041, Axis4 = 0.040, Axis5 = 0.039
#Now we plot the graph
df2_ex_arrangedrf$Method <- factor(df2_ex_arrangedrf$Method, levels(df2_ex_arrangedrf$Method)[c(1,6,2:5)])
plot_RF_ex <- ggplot(df2_ex_arrangedrf, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method), alpha=.6, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=3, box.padding=1.1, point.padding = 0.6, show.legend=FALSE) +
labs(x="PCoA1 (14.7%)", y=" PCoA2 (5.0%)") +
theme_classic() + ggtitle("Robinson-Foulds - exon") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold")) +
scale_colour_manual(values = c("#000000", "#E69F00", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17, 17, 19, 19, 19, 19))
plot_RF_ex
#KC (Exon matrix)
tree_ex <- read.nexus("input_rooted/all_spgenetree_ex_kc.nex")
is.rooted.multiPhylo(tree_ex)
tree_ex <- root(tree_ex, "Apiales_Araliaceae_Aralia_undulata", resolve.root = TRUE)
is.rooted.multiPhylo(tree_ex)
tree_names_ex <- names(tree_ex)
tree_names_ex
#This is to identify metadata
method_ex <- read.csv("all_spgenetree.csv", h=F)
#Calculating the treespace
treespace_ex <- treespace(tree_ex, nf=66)
#head(treespace_ex$pco$li)
plotGrovesD3(treespace_ex$pc, treeNames = tree_names_ex)
#Detecting the number of groups
#id_cluster_ex <- findGroves(treespace_ex)
#580
#y
id_cluster_ex <- findGroves(treespace_ex, nclust = 3)
plotGrovesD3(id_cluster_ex, treeNames = tree_names_ex)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_ex <- data.frame(id_cluster_ex$treespace$pco$li, dataset=tree_names_ex, Method=method_ex$V1,
group=id_cluster_ex$groups, name=rownames(id_cluster_ex$treespace$pco$li))
#head(df_ex)
df_ex["sptree_vs_getree"] <- c("as", "sv", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_ex)
#change order to avoid overlapping
df2_ex_arranged <- arrange(df_ex, desc(Method))
#head(df2_ex_arranged)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_ex$pco$eig/sum(treespace_ex$pco$eig),3)
#Axis1 = 0.521 Axis2 = 0.086, Axis3 = 0.061, Axis4 = 0.047, Axis5 = 0.031
#Now we plot the graph
df2_ex_arranged$Method <- factor(df2_ex_arranged$Method, levels(df2_ex_arranged$Method)[c(1,6,2:5)])
plot_KC_ex <- ggplot(df2_ex_arranged, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method), alpha=.6, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=3, box.padding=1, point.padding = 0.6, show.legend=FALSE) +
labs(x="PCoA1 (52.1%)", y=" PCoA2 (8.6%)") +
theme_classic() + ggtitle("Kendall-Colijn - exon") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold"))+
scale_colour_manual(values = c("#000000", "#E69F00", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17, 17, 19, 19, 19, 19))
plot_KC_ex
#RF (codon matrix)
tree_cdrf <- read.nexus("./input_unrooted/all_spgenetree_cd_rf.nex")
is.rooted.multiPhylo(tree_cdrf)
#tree_ex <- unroot(tree_cdrf)
tree_names_cdrf <- names(tree_cdrf)
tree_names_cdrf
#This is to identify metadata
method_cdrf <- read.csv("all_spgenetree.csv", h=F)
#Calculating the treespace
treespace_cdrf <- treespace(tree_cdrf,  method = "RF", nf=66)
#head(treespace_cdrf)
#head(treespace_cdrf$pco$li)
plotGrovesD3(treespace_cdrf$pc, treeNames = tree_names_cdrf)
#Detecting the number of groups
#id_cluster_cdrf <- findGroves(treespace_cdrf, method = "RF")
#200
#y
id_cluster_cdrf <- findGroves(treespace_cdrf, method = "RF", nclust = 2)
plotGrovesD3(id_cluster_cdrf, treeNames = tree_names_cdrf)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_cdrf <- data.frame(id_cluster_cdrf$treespace$pco$li, dataset=tree_names_cdrf, Method=method_cdrf$V1,
group=id_cluster_cdrf$groups, name=rownames(id_cluster_cdrf$treespace$pco$li))
#head(df_cdrf)
df_cdrf["sptree_vs_getree"] <- c("as", "sv", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_cdrf)
#change order to avoid overlapping
df2_cd_arrangedrf <- arrange(df_cdrf, desc(Method))
#head(df2_cd_arrangedrf)
#change order to avoid overlapping
df2_cd_arrangedrf <- arrange(df_cdrf, desc(Method))
#head(df2_cd_arrangedrf)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_cdrf$pco$eig/sum(treespace_cdrf$pco$eig),3)
#Axis1 = 0.147, Axis2 = 0.050, Axis3 = 0.041, Axis4 = 0.040, Axis5 = 0.039
#Now we plot the graph
df2_cd_arrangedrf$Method <- factor(df2_cd_arrangedrf$Method, levels(df2_cd_arrangedrf$Method)[c(1,6,2:5)])
plot_RF_cd <- ggplot(df2_cd_arrangedrf, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method), alpha=.6, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=3, box.padding=1, point.padding = 0.6, show.legend=FALSE) +
labs(x="PCoA1 (14.7%)", y=" PCoA2 (0.05%)") +
theme_classic() + ggtitle("Robinson-Foulds - codon") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold")) +
scale_colour_manual(values = c("#000000", "#E69F00", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17, 17, 19, 19, 19, 19))
plot_RF_cd
#KC (codon matrix)
tree_cd <- read.nexus("./input_rooted/all_spgenetree_cd_kc.nex")
tree_cd
is.rooted.multiPhylo(tree_cd)
tree_cd <- root(tree_cd, "Apiales_Araliaceae_Aralia_undulata", resolve.root = TRUE)
is.rooted.multiPhylo(tree_cd)
tree_names_cd <- names(tree_cd)
tree_names_cd
#This is to identify metadata
method_cd <- read.csv("all_spgenetree.csv", h=F)
#Calculating the treespace
treespace_cd <- treespace(tree_cd, nf=66)
#head(treespace_cd)
#head(treespace_cd$pco$li)
plotGrovesD3(treespace_cd$pc, treeNames = tree_names_cd)
#Detecting the number of groups
#id_cluster_cd <- findGroves(treespace_cd)
#580
#y
id_cluster_cd <- findGroves(treespace_cd, nclust = 3)
plotGrovesD3(id_cluster_cd, treeNames = tree_names_cd)
#making a dataframe with the coordinates of the trees calculated by treespace(), cluster information, and rownmes
#for names of trees; group is not necessary because I have already calculated the number of groups with findGroves()
df_cd <- data.frame(id_cluster_cd$treespace$pco$li, dataset=tree_names_cd, Methods=method_cd$V1,
group=id_cluster_cd$groups, name=rownames(id_cluster_cd$treespace$pco$li))
#head(df_cd)
df_cd["sptree_vs_getree"] <- c("as", "sv", "c", "gp", "bs", NA, NA, NA, NA, NA, NA, NA, "matK", NA, NA, NA, NA, NA, "ndhF", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "rbcL", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
#head(df_cd)
#change order to avoid overlapping
df2_cd_arranged <- arrange(df_cd, desc(Methods))
#head(df2_cd_arranged)
#We use the round() and sum() to verify the percentage explained by each axis in the ordination
round(treespace_cd$pco$eig/sum(treespace_cd$pco$eig),3)
#Axis1 = 0.521, Axis2 = 0.086, Axis3 = 0.061, Axis4 = 0.047, Axis5 = 0.031
#Now we plot the graph
df2_cd_arranged$Method <- factor(df2_cd_arranged$Method, levels(df2_cd_arranged$Method)[c(1,6,2:5)])
plot_KC_cd <- ggplot(df2_cd_arranged, aes(x=A1, y=A2, color = Method, label = sptree_vs_getree)) +
geom_point(aes(color=Method, shape=Method), alpha=.6, size=4) +
guides(size=F) + geom_hline(yintercept = 0, linetype="dashed") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_text_repel(size=3, box.padding=1.5, point.padding = 0.8, show.legend=FALSE) +
labs(x="PCoA1 (52.1%)", y=" PCoA2 (8.6%)") +
theme_classic() + ggtitle("Kendall-Colijn - codon") +
theme(legend.text=element_text(size=12),legend.title=element_text(size=15), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(axis.title=element_text(size = 12,face="bold"), axis.text=element_text(size=10,face="bold"))  +
scale_colour_manual(values = c("#000000", "#E69F00", "#CC79A7", "#009E73", "#F0E442", "#56B4E9"))+
scale_shape_manual(values=c(17, 17, 19, 19, 19, 19))
plot_KC_cd
#GENE and AMINO ACIDS
#Now we combine both graphs using plot_grid()
#First combining both graphs without a legend
legend3 <- get_legend(plot_RF_ge + theme(legend.position="bottom"))
ge_aa_plots <- plot_grid(plot_RF_ge + theme(legend.position="none"),
plot_KC_ge + theme(legend.position="none"),
plot_RF_aa + theme(legend.position="none"),
plot_KC_aa + theme(legend.position="none"),
align = 'vh', labels = c("A", "B", "C", "D"), hjust = -1, nrow = 2)
ge_aa_plots
#Now adding the legend
ge_aa_plots_onelegend <- plot_grid(ge_aa_plots, legend3, ncol=1, rel_heights = c(3, .5))
ge_aa_plots_onelegend
#Finally adding a title
title <- ggdraw() + draw_label("Gene Trees Landscape", fontface='bold')
ge_aa_plot <- plot_grid(title, ge_aa_plots_onelegend, ncol=1, rel_heights = c(0.1, 1))
#GENE and AMINO ACIDS
#Now we combine both graphs using plot_grid()
#First combining both graphs without a legend
legend3 <- get_legend(plot_RF_ge + theme(legend.position="bottom"))
ge_aa_plots <- plot_grid(plot_RF_ge + theme(legend.position="none"),
plot_KC_ge + theme(legend.position="none"),
plot_RF_aa + theme(legend.position="none"),
plot_KC_aa + theme(legend.position="none"),
align = 'vh', labels = c("A", "B", "C", "D"), hjust = -1, nrow = 2)
ge_aa_plots
#Now adding the legend
ge_aa_plots_onelegend <- plot_grid(ge_aa_plots, legend3, ncol=1, rel_heights = c(3, .5))
ge_aa_plots_onelegend
#Finally adding a title
title <- ggdraw() + draw_label("Gene Trees Landscape", fontface='bold')
ge_aa_plot <- plot_grid(title, ge_aa_plots_onelegend, ncol=1, rel_heights = c(0.1, 1))
#GENE and AMINO ACIDS
#Now we combine both graphs using plot_grid()
#First combining both graphs without a legend
legend3 <- get_legend(plot_RF_ge + theme(legend.position="bottom"))
ge_aa_plots <- plot_grid(plot_RF_ge + theme(legend.position="none"),
plot_KC_ge + theme(legend.position="none"),
plot_RF_aa + theme(legend.position="none"),
plot_KC_aa + theme(legend.position="none"),
align = 'vh', labels = c("A", "B", "C", "D"), hjust = -1, nrow = 2)
ge_aa_plots
#Now adding the legend
ge_aa_plots_onelegend <- plot_grid(ge_aa_plots, legend3, ncol=1, rel_heights = c(3, .5))
ge_aa_plots_onelegend
#Finally adding a title
title <- ggdraw() + draw_label("Gene Trees Landscape", fontface='bold')
ge_aa_plot <- plot_grid(title, ge_aa_plots_onelegend, ncol=1, rel_heights = c(0.1, 1))
#Saving pdf determining the size of the figure:
#save_plot("./plot_ge_aa_2.pdf", ge_aa_plot, base_width=9, base_height=11)
#EXON and CODON (SI)
#Now we combine both graphs using plot_grid()
#First combining both graphs without a legend
legend4 <- get_legend(plot_RF_ex + theme(legend.position="bottom"))
ex_cd_plots <- plot_grid(plot_RF_ex + theme(legend.position="none"),
plot_KC_ex + theme(legend.position="none"),
plot_RF_cd + theme(legend.position="none"),
plot_KC_cd + theme(legend.position="none"),
align = 'vh', labels = c("A", "B", "C", "D"), hjust = -1, nrow = 2)
ex_cd_plots
#Now adding the legend
ex_cd_plots_onelegend <- plot_grid(ex_cd_plots, legend4, ncol=1, rel_heights = c(3, .5))
ex_cd_plots_onelegend
#Finally adding a title
title <- ggdraw() + draw_label("Gene Tree Landscape", fontface='bold')
ex_cd_plot <- plot_grid(title, ex_cd_plots_onelegend, ncol=1, rel_heights=c(0.1, 1))
#EXON and CODON (SI)
#Now we combine both graphs using plot_grid()
#First combining both graphs without a legend
legend4 <- get_legend(plot_RF_ex + theme(legend.position="bottom"))
ex_cd_plots <- plot_grid(plot_RF_ex + theme(legend.position="none"),
plot_KC_ex + theme(legend.position="none"),
plot_RF_cd + theme(legend.position="none"),
plot_KC_cd + theme(legend.position="none"),
align = 'vh', labels = c("A", "B", "C", "D"), hjust = -1, nrow = 2)
ex_cd_plots
#Now adding the legend
ex_cd_plots_onelegend <- plot_grid(ex_cd_plots, legend4, ncol=1, rel_heights = c(3, .5))
ex_cd_plots_onelegend
#Finally adding a title
title <- ggdraw() + draw_label("Gene Tree Landscape", fontface='bold')
ex_cd_plot <- plot_grid(title, ex_cd_plots_onelegend, ncol=1, rel_heights=c(0.1, 1))
#Saving pdf determining the size of the figure:
#save_plot("./plot_ex_cd.pdf", ex_cd_plot, base_width=8, base_height=8)
