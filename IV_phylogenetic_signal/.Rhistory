combret_slik$site <- as.numeric(rownames(combret_slik))
#Calculate mean delta for 3 hypothesis (see formula in Shen et al. 2017)
combret_slik$mean.delta <- ((abs(combret_slik$T1-combret_slik$T2))+(abs(combret_slik$T1-combret_slik$T3))+
(abs(combret_slik$T2-combret_slik$T3)))/3
#Logical comparisons to determine hypothesis with the highest support among the 3 topologies
combret_slik$T123.sup <- ifelse(combret_slik$T1>combret_slik$T2 & combret_slik$T1>combret_slik$T3, "T1",
ifelse(combret_slik$T2>combret_slik$T1 & combret_slik$T2>combret_slik$T3, "T2",
ifelse(combret_slik$T3>combret_slik$T1 & combret_slik$T3>combret_slik$T2, "T3",
ifelse(combret_slik$T1==combret_slik$T2 & combret_slik$T1==combret_slik$T3 &
combret_slik$T2==combret_slik$T3, "none",
ifelse(combret_slik$T1==combret_slik$T2, "not T3",
ifelse(combret_slik$T1==combret_slik$T2, "not T2",
ifelse(combret_slik$T2==combret_slik$T3, "not T1", " ")))))))
#Delta of likelihoods for 2-hypotheses
#T1 vs T2
combret_slik$T12.delta <- combret_slik$T1 - combret_slik$T2
#Store absolute value to sort and filter later
combret_slik$T12.delta.abs <- abs(combret_slik$T12.delta)
#Logical comparisons to determine the hypothesis with highest support
combret_slik$T12.sup <- ifelse(combret_slik$T1>combret_slik$T2, "T1",
ifelse(combret_slik$T1<combret_slik$T2, "T2",
ifelse(combret_slik$T1==combret_slik$T2, "none", " ")))
#T1 vs T3
combret_slik$T13.delta <- combret_slik$T1 - combret_slik$T3
combret_slik$T13.delta.abs <- abs(combret_slik$T13.delta)
combret_slik$T13.sup <- ifelse(combret_slik$T1>combret_slik$T3, "T1",
ifelse(combret_slik$T1<combret_slik$T3, "T3",
ifelse(combret_slik$T1==combret_slik$T3, "none", " ")))
#T2 vs T3
combret_slik$T23.delta <- combret_slik$T2 - combret_slik$T3
combret_slik$T23.delta.abs <- abs(combret_slik$T23.delta)
combret_slik$T23.sup <- ifelse(combret_slik$T2>combret_slik$T3, "T2",
ifelse(combret_slik$T2<combret_slik$T3, "T3",
ifelse(combret_slik$T2==combret_slik$T3, "none", " ")))
#Transform variables into factors
combret_slik$T123.sup <- as.factor(combret_slik$T123.sup)
combret_slik$T12.sup <- as.factor(combret_slik$T12.sup)
combret_slik$T13.sup <- as.factor(combret_slik$T13.sup)
combret_slik$T23.sup <- as.factor(combret_slik$T23.sup)
#Panel G - Combretaceae original relative site order (Figure S26)
#to plot only 100 sites with strongest signal:
combret_plot <- head(combret_slik[order(-combret_slik$mean.delta),], 100)
combret_3way_cb <- ggplot(combret_plot, aes(x=site, y=mean.delta, fill=T123.sup, color=T123.sup)) +
geom_point(stat="identity") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_blank()) +
geom_hline(yintercept = 0.5, linetype = "dashed", colour = "grey") +
geom_hline(yintercept = 2.5, linetype = "dashed", colour = "grey") +
scale_y_continuous(breaks = seq(-100, 100, by = 1)) +
labs(title="Combretaceae", x="", y=expression(paste(Delta,"SLS"))) +
scale_color_manual(values=c("#009E73", "#0072B2")) +
scale_fill_manual(values=c("#009E73", "#0072B2"))
combret_3way_cb
#Panel G - Combretaceae original relative site order (Figure S26)
#to plot only 100 sites with strongest signal:
combret_plot <- head(combret_slik[order(-combret_slik$mean.delta),], 100)
combret_3way_cb <- ggplot(combret_plot, aes(x=site, y=mean.delta, fill=T123.sup, color=T123.sup)) +
geom_point(stat="identity") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_blank()) +
geom_hline(yintercept = 0.5, linetype = "dashed", colour = "grey") +
geom_hline(yintercept = 2.5, linetype = "dashed", colour = "grey") +
scale_y_continuous(breaks = seq(-100, 100, by = 1)) +
labs(title="Combretaceae", x="", y=expression(paste(Delta,"SLS"))) +
scale_color_manual(values=c("#009E73", "#0072B2")) +
scale_fill_manual(values=c("#009E73", "#0072B2"))
combret_3way_cb
#Panel H - Combretaceae sites ordered by DeltaSLS (Figure S26)
#to plot only 100 sites with strongest signal:
combret_plot_100 <- head(combret_slik[order(-combret_slik$mean.delta),], 100)
combret_3waysorted_100 <- ggplot(combret_plot_100, aes(x=reorder(site, -mean.delta),
y=mean.delta, fill=T123.sup, color=T123.sup)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_blank(), axis.title.y=element_blank()) +
geom_hline(yintercept = 0.5, linetype = "dashed", colour = "grey") +
geom_hline(yintercept = 2.5, linetype = "dashed", colour = "grey") +
scale_y_continuous(breaks = seq(-100, 100, by = 1)) +
labs(title="Combretaceae", x="", y=expression(paste(Delta,"SLS"))) +
scale_color_manual(values = c("#009E73", "#0072B2")) +
scale_fill_manual(values = c("#009E73", "#0072B2"))
combret_3waysorted_100
#To calculate how many sites support T1 and T2 among the 100 sites with strongest signal:
summary(combret_plot_100$T123.sup)
#To calculate how many sites support T1 and T2 among all sites:
summary(combret_slik$T123.sup)
combret_glik <- cbind(read.csv("./reading_r/ex_conc_part.txt.t"),
"T1"="",
"T2"="",
"T3"="",
"mean.delta"="",
"T123.sup"="",
"T12.delta"="",
"T12.delta.abs"="",
"T12.sup"="",
"T13.delta"="",
"T13.delta.abs"="",
"T13.sup"="",
"T23.delta"="",
"T23.delta.abs"="",
"T23.sup"="",
stringsAsFactors=FALSE)
#Create a column for gene IDs as numeric
combret_glik$site <- as.numeric(rownames(combret_glik))
#The following loop sums ranges of rows from the slik dataframe based on the start and end coordinates for the partition file
for (g in 1:nrow(combret_glik)){
combret_glik$T1[g] <- sum(combret_slik$T1[combret_glik$start[g]:combret_glik$end[g]])
combret_glik$T2[g] <- sum(combret_slik$T2[combret_glik$start[g]:combret_glik$end[g]])
combret_glik$T3[g] <- sum(combret_slik$T3[combret_glik$start[g]:combret_glik$end[g]])
}
#Store sums as numeric type
combret_glik$T1 <- as.numeric(combret_glik$T1)
combret_glik$T2 <- as.numeric(combret_glik$T2)
combret_glik$T3 <- as.numeric(combret_glik$T3)
#Mean delta gene wise likelihood for the 3 hypotheses
combret_glik$mean.delta <- ((abs(combret_glik$T1- combret_glik$T2))+(abs(combret_glik$T1-combret_glik$T3)) +
(abs(combret_glik$T2 - combret_glik$T3)))/3
#Logical comparison to determine hypothesis with highest support
combret_glik$T123.sup <- ifelse(combret_glik$T1>combret_glik$T2 & combret_glik$T1>combret_glik$T3, "T1",
ifelse(combret_glik$T2>combret_glik$T1 & combret_glik$T2>combret_glik$T3, "T2",
ifelse(combret_glik$T3>combret_glik$T1 & combret_glik$T3>combret_glik$T2, "T3",
ifelse(combret_glik$T1==combret_glik$T2 & combret_glik$T1==combret_glik$T3 &
combret_glik$T2==combret_glik$T3, "none",
ifelse(combret_glik$T1==combret_glik$T2, "no T3",
ifelse(combret_glik$T1==combret_glik$T3, "no T2",
ifelse(combret_glik$T2==combret_glik$T3, "no T1", "")))))))
# Delta gene likelihood for 3 hypotheses
#T1 vs T2
combret_glik$T12.delta <- combret_glik$T1 - combret_glik$T2
# Storage of absolute values to sort and filter by column
combret_glik$T12.delta.abs <- abs(combret_glik$T12.delta)
#Logical comparison to determine hypothesis with highest support
combret_glik$T12.sup <-ifelse(combret_glik$T1>combret_glik$T2, "T1",
ifelse(combret_glik$T1<combret_glik$T2, "T2",
ifelse(combret_glik$T1==combret_glik$T2, "none", "")))
#T1 vs T3
combret_glik$T13.delta <- combret_glik$T1 - combret_glik$T3
combret_glik$T13.delta.abs <- abs(combret_glik$T13.delta)
combret_glik$T13.sup <-ifelse(combret_glik$T1>combret_glik$T3, "T1",
ifelse(combret_glik$T1<combret_glik$T3, "T3",
ifelse(combret_glik$T1==combret_glik$T3, "none", "")))
#T2 vs T3
combret_glik$T23.delta <- combret_glik$T2 - combret_glik$T3
combret_glik$T23.delta.abs <- abs(combret_glik$T23.delta)
combret_glik$T23.sup <-ifelse(combret_glik$T2>combret_glik$T3, "T2",
ifelse(combret_glik$T2<combret_glik$T3, "T3",
ifelse(combret_glik$T2==combret_glik$T3, "none", "")))
#Transform variables into factors
combret_glik$T123.sup <- as.factor(combret_glik$T123.sup)
combret_glik$T12.sup <- as.factor(combret_glik$T12.sup)
combret_glik$T13.sup <- as.factor(combret_glik$T13.sup)
combret_glik$T23.sup <- as.factor(combret_glik$T23.sup)
combretg_plot <- combret_glik
#Panel D (Figure 7)
combretg_3waysorted_cb <- ggplot(combretg_plot, aes(x=reorder(gene, -mean.delta), y=mean.delta,
fill=T123.sup, color=T123.sup)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust =0.5, size=8),
legend.title=element_blank()) +
geom_hline(yintercept=0.5, linetype="dashed", colour="grey") +
scale_color_manual(values=c("#D55E00", "#009E73", "#0072B2")) +
scale_fill_manual(values=c("#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(breaks = seq(0, 15, by = 3)) +
labs(title = "Combretaceae",
x="",
y=expression(paste(Delta,"GLS")))
combretg_3waysorted_cb
summary(combret_glik$T123.sup)
summary(combret_glik$T123.sup)
T1_erisma <- read.tree("./reading_r/T1_Erisma.tre")      #Erisma sister to Korupodendron and Erismadelphus (Erismeae tribe)
T2_erisma <- read.tree("./reading_r/T2_Erisma.tre")      #Erisma sister to Vochysieae tribe
T3_erisma <- read.tree("./reading_r/T3_Erisma.tre")      #Ersima sister to Vochysia and Salvertia (within Vochysieae tribe)
par(mfcol=c(1,3))
#{plot.phylo(T1_erisma, cex=0.9, label.offset = 0.3, no.margin=TRUE, edge.width=1) + nodelabels()}
#nodelabels(), for example: {plot.phylo(T1, cex=0.9, label.offset = 0.3, no.margin=TRUE, edge.width=1) + nodelabels()}
#now, plot the tree marking the three nodes that refer to Erisma placement in Vochysiaceae in the three topologies
erisma_T1 <- plot.phylo(T1_erisma, cex=0.8, font=1, x.lim = 70, no.margin=TRUE,
edge.width=1, align.tip.label = TRUE)
text(96:96,"T1", cex=2)
nodelabels(pch=21, node=148, cex=2, bg="firebrick1") # Erisma nested with Erismeae (current classification)
nodelabels(pch=21, node=144, cex=1.5, bg="dodgerblue1") # Vochysieae tribe
nodelabels(pch=21, node=149, cex=1.5, bg="black") # Erismeae tribe (african genera)
#{plot.phylo(T2_erisma, cex=0.9, label.offset = 0.3, no.margin=TRUE, edge.width=1) + nodelabels()}
erisma_T2 <- plot.phylo(T2_erisma, cex=0.8, font=1, x.lim = 72, no.margin=TRUE,
edge.width=1, align.tip.label = TRUE)
text(96:96,"T2", cex=2)
nodelabels(pch=21, node=144, cex=2, bg="firebrick1") # Erisma nested with Vochysieae
nodelabels(pch=21, node=145, cex=1.5, bg="dodgerblue1") # Vochysieae tribe
nodelabels(pch=21, node=149, cex=1.5, bg="black") # Erismeae tribe (african genera)
#{plot.phylo(T2_erisma, cex=0.9, label.offset = 0.3, no.margin=TRUE, edge.width=1) + nodelabels()}
erisma_T3 <- plot.phylo(T3_erisma, cex=0.8, font=1, x.lim = 75, no.margin=TRUE,
edge.width=1, align.tip.label = TRUE)
text(96:96,"T3", cex=2)
nodelabels(pch=21, node=147, cex=2, bg="firebrick1") # Erisma nested within Vochysieae, sister of VS clade
nodelabels(pch=21, node=144, cex=1.5, bg="dodgerblue1") # Vochysieae tribe
nodelabels(pch=21, node=149, cex=1.5, bg="black") # Erismeae tribe (african genera)
erisma_slik <- cbind(read.csv("./reading_r/T1_Erisma.sitelh.t"),
read.csv("./reading_r/T2_Erisma.sitelh.t"),
read.csv("./reading_r/T3_Erisma.sitelh.t"),
"mean.delta"="",
"T123.sup"="",
"T12.delta"="", "T12.delta.abs"="", "T12.sup"="",
"T13.delta"="", "T13.delta.abs"="", "T13.sup"="",
"T23.delta"="", "T23.delta.abs"="", "T23.sup"="",
stringsAsFactors=FALSE)
#Create a site ID column with numeric format
erisma_slik$site <- as.numeric(rownames(erisma_slik))
#Calculate mean delta for 3 hypothesis (see formula in Shen et al. 2017)
erisma_slik$mean.delta <- ((abs(erisma_slik$T1-erisma_slik$T2))+(abs(erisma_slik$T1-erisma_slik$T3))+
(abs(erisma_slik$T2-erisma_slik$T3)))/3
#Logical comparisons to determine hypothesis with the highest support among the 3 topologies
erisma_slik$T123.sup <- ifelse(erisma_slik$T1>erisma_slik$T2 & erisma_slik$T1>erisma_slik$T3, "T1",
ifelse(erisma_slik$T2>erisma_slik$T1 & erisma_slik$T2>erisma_slik$T3, "T2",
ifelse(erisma_slik$T3>erisma_slik$T1 & erisma_slik$T3>erisma_slik$T2, "T3",
ifelse(erisma_slik$T1==erisma_slik$T2 & erisma_slik$T1==erisma_slik$T3 &
erisma_slik$T2==erisma_slik$T3, "none",
ifelse(erisma_slik$T1==erisma_slik$T2, "not T3",
ifelse(erisma_slik$T1==erisma_slik$T2, "not T2",
ifelse(erisma_slik$T2==erisma_slik$T3, "not T1", " ")))))))
#Delta of likelihoods for 2-hypotheses
#T1 vs T2
erisma_slik$T12.delta <- erisma_slik$T1 - erisma_slik$T2
#Store absolute value to sort and filter later
erisma_slik$T12.delta.abs <- abs(erisma_slik$T12.delta)
#Logical comparisons to determine the hypothesis with highest support
erisma_slik$T12.sup <- ifelse(erisma_slik$T1>erisma_slik$T2, "T1",
ifelse(erisma_slik$T1<erisma_slik$T2, "T2",
ifelse(erisma_slik$T1==erisma_slik$T2, "none", " ")))
#T1 vs T3
erisma_slik$T13.delta <- erisma_slik$T1 - erisma_slik$T3
erisma_slik$T13.delta.abs <- abs(erisma_slik$T13.delta)
erisma_slik$T13.sup <- ifelse(erisma_slik$T1>erisma_slik$T3, "T1",
ifelse(erisma_slik$T1<erisma_slik$T3, "T3",
ifelse(erisma_slik$T1==erisma_slik$T3, "none", " ")))
#T2 vs T3
erisma_slik$T23.delta <- erisma_slik$T2 - erisma_slik$T3
erisma_slik$T23.delta.abs <- abs(erisma_slik$T23.delta)
erisma_slik$T23.sup <- ifelse(erisma_slik$T2>erisma_slik$T3, "T2",
ifelse(erisma_slik$T2<erisma_slik$T3, "T3",
ifelse(erisma_slik$T2==erisma_slik$T3, "none", " ")))
#Transform variables into factors
erisma_slik$T123.sup <- as.factor(erisma_slik$T123.sup)
erisma_slik$T12.sup <- as.factor(erisma_slik$T12.sup)
erisma_slik$T13.sup <- as.factor(erisma_slik$T13.sup)
erisma_slik$T23.sup <- as.factor(erisma_slik$T23.sup)
#Panel I - Erisma original relative site order by DeltaSLS (Figure S26)
#to plot only 100 sites with strongest signal:
erisma_plot <- head(erisma_slik[order(-erisma_slik$mean.delta),], 100)
erisma_3way_cb <- ggplot(erisma_plot, aes(x=site, y=mean.delta, fill=T123.sup, color=T123.sup)) +
geom_point(stat="identity") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_blank()) +
geom_hline(yintercept = 0.5, linetype = "dashed", colour = "grey") +
geom_hline(yintercept = 2.5, linetype = "dashed", colour = "grey") +
scale_y_continuous(breaks = seq(-100, 100, by =1)) +
labs(title="Erisma", x=expression(paste("Original relative site order")),
y=expression(paste(Delta,"SLS"))) + theme(plot.title = element_text(face= 4)) +
scale_color_manual(values = c("#D55E00", "#009E73", "#0072B2")) +
scale_fill_manual(values = c("#D55E00", "#009E73", "#0072B2"))
erisma_3way_cb
#Panel I - Erisma original relative site order by DeltaSLS (Figure S26)
#to plot only 100 sites with strongest signal:
erisma_plot <- head(erisma_slik[order(-erisma_slik$mean.delta),], 100)
erisma_3way_cb <- ggplot(erisma_plot, aes(x=site, y=mean.delta, fill=T123.sup, color=T123.sup)) +
geom_point(stat="identity") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_blank()) +
geom_hline(yintercept = 0.5, linetype = "dashed", colour = "grey") +
geom_hline(yintercept = 2.5, linetype = "dashed", colour = "grey") +
scale_y_continuous(breaks = seq(-100, 100, by =1)) +
labs(title="Erisma", x=expression(paste("Original relative site order")),
y=expression(paste(Delta,"SLS"))) + theme(plot.title = element_text(face= 4)) +
scale_color_manual(values = c("#D55E00", "#009E73", "#0072B2")) +
scale_fill_manual(values = c("#D55E00", "#009E73", "#0072B2"))
erisma_3way_cb
#Panel J - Erisma sites ordered by DeltaSLS (Figure S26)
#to plot only 100 sites with strongest signal:
erisma_plot_100 <- head(erisma_slik[order(-erisma_slik$mean.delta),], 100)
erisma_3waysorted_100 <- ggplot(erisma_plot_100, aes(x=reorder(site, -mean.delta),
y=mean.delta, fill=T123.sup, color=T123.sup)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_blank(), axis.title.y=element_blank()) +
geom_hline(yintercept = 0.5, linetype = "dashed", colour = "grey") +
geom_hline(yintercept = 2.5, linetype = "dashed", colour = "grey") +
scale_y_continuous(breaks = seq(-100, 100, by = 1)) +
labs(title="Erisma", x=expression(paste("Sites ordered by ",Delta, "SLS")),
y=expression(paste(Delta,"SLS"))) + theme(plot.title = element_text(face= 4)) +
scale_color_manual(values = c("#D55E00", "#009E73", "#0072B2")) +
scale_fill_manual(values = c("#D55E00", "#009E73", "#0072B2"))
erisma_3waysorted_100
summary(erisma_plot_100$T123.sup)
summary(erisma_slik$T123.sup)
erisma_glik <- cbind(read.csv("./reading_r/ex_conc_part.txt.t"),
"T1"="",
"T2"="",
"T3"="",
"mean.delta"="",
"T123.sup"="",
"T12.delta"="",
"T12.delta.abs"="",
"T12.sup"="",
"T13.delta"="",
"T13.delta.abs"="",
"T13.sup"="",
"T23.delta"="",
"T23.delta.abs"="",
"T23.sup"="",
stringsAsFactors=FALSE)
#Create a column for gene IDs as numeric
erisma_glik$site <- as.numeric(rownames(erisma_glik))
#The following loop sums ranges of rows from the slik dataframe based on the start and end coordinates for the partition file
for (g in 1:nrow(erisma_glik)){
erisma_glik$T1[g] <- sum(erisma_slik$T1[erisma_glik$start[g]:erisma_glik$end[g]])
erisma_glik$T2[g] <- sum(erisma_slik$T2[erisma_glik$start[g]:erisma_glik$end[g]])
erisma_glik$T3[g] <- sum(erisma_slik$T3[erisma_glik$start[g]:erisma_glik$end[g]])
}
#Store sums as numeric type
erisma_glik$T1 <- as.numeric(erisma_glik$T1)
erisma_glik$T2 <- as.numeric(erisma_glik$T2)
erisma_glik$T3 <- as.numeric(erisma_glik$T3)
#Mean delta gene wise likelihood for the 3 hypotheses
erisma_glik$mean.delta <- ((abs(erisma_glik$T1- erisma_glik$T2))+(abs(erisma_glik$T1-erisma_glik$T3)) +
(abs(erisma_glik$T2 - erisma_glik$T3)))/3
#Logical comparison to determine hypothesis with highest support
erisma_glik$T123.sup <- ifelse(erisma_glik$T1>erisma_glik$T2 & erisma_glik$T1>erisma_glik$T3, "T1",
ifelse(erisma_glik$T2>erisma_glik$T1 & erisma_glik$T2>erisma_glik$T3, "T2",
ifelse(erisma_glik$T3>erisma_glik$T1 & erisma_glik$T3>erisma_glik$T2, "T3",
ifelse(erisma_glik$T1==erisma_glik$T2 & erisma_glik$T1==erisma_glik$T3 &
erisma_glik$T2==erisma_glik$T3, "none",
ifelse(erisma_glik$T1==erisma_glik$T2, "no T3",
ifelse(erisma_glik$T1==erisma_glik$T3, "no T2",
ifelse(erisma_glik$T2==erisma_glik$T3, "no T1", "")))))))
# Delta gene likelihood for 3 hypotheses
#T1 vs T2
erisma_glik$T12.delta <- erisma_glik$T1 - erisma_glik$T2
# Storage of absolute values to sort and filter by column
erisma_glik$T12.delta.abs <- abs(erisma_glik$T12.delta)
#Logical comparison to determine hypothesis with highest support
erisma_glik$T12.sup <-ifelse(erisma_glik$T1>erisma_glik$T2, "T1",
ifelse(erisma_glik$T1<erisma_glik$T2, "T2",
ifelse(erisma_glik$T1==erisma_glik$T2, "none", "")))
#T1 vs T3
erisma_glik$T13.delta <- erisma_glik$T1 - erisma_glik$T3
erisma_glik$T13.delta.abs <- abs(erisma_glik$T13.delta)
erisma_glik$T13.sup <-ifelse(erisma_glik$T1>erisma_glik$T3, "T1",
ifelse(erisma_glik$T1<erisma_glik$T3, "T3",
ifelse(erisma_glik$T1==erisma_glik$T3, "none", "")))
#T2 vs T3
erisma_glik$T23.delta <- erisma_glik$T2 - erisma_glik$T3
erisma_glik$T23.delta.abs <- abs(erisma_glik$T23.delta)
erisma_glik$T23.sup <-ifelse(erisma_glik$T2>erisma_glik$T3, "T2",
ifelse(erisma_glik$T2<erisma_glik$T3, "T3",
ifelse(erisma_glik$T2==erisma_glik$T3, "none", "")))
#Transform variables into factors
erisma_glik$T123.sup <- as.factor(erisma_glik$T123.sup)
erisma_glik$T12.sup <- as.factor(erisma_glik$T12.sup)
erisma_glik$T13.sup <- as.factor(erisma_glik$T13.sup)
erisma_glik$T23.sup <- as.factor(erisma_glik$T23.sup)
erismag_plot <- erisma_glik
#Panel E (Figure 7)
erismag_3waysorted_cb <- ggplot(erismag_plot, aes(x=reorder(gene, -mean.delta), y=mean.delta,
fill=T123.sup, color=T123.sup)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust =0.5, size=8),
legend.title=element_blank()) +
geom_hline(yintercept=0.5, linetype="dashed", colour="grey") +
scale_color_manual(values=c("#D55E00", "#009E73", "#0072B2")) +
scale_fill_manual(values=c("#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(breaks = seq(0, 15, by = 3)) +
labs(title = "Erisma",
x=expression(paste("Genes ordered by ",Delta,"GLS")),
y=expression(paste(Delta,"GLS"))) + theme(plot.title = element_text(face= "bold.italic"))
erismag_3waysorted_cb
summary(erisma_glik$T123.sup)
summary(erisma_glik$T123.sup)
all5taxa_twoplots_cb <- plot_grid(zygo_3way_cb + theme(legend.position="none"),
zygo_3waysorted_100 + theme(legend.position="none"),
oxali_3way_cb + theme(legend.position="none"),
oxali_3waysorted_100 + theme(legend.position="none"),
gerani_3way_cb + theme(legend.position="none"),
gerani_3waysorted_100 + theme(legend.position="none"),
combret_3way_cb + theme(legend.position="none"),
combret_3waysorted_100 + theme(legend.position="none"),
erisma_3way_cb + theme(legend.position="none"),
erisma_3waysorted_100 + theme(legend.position="none"),
labels=c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J"), ncol=2, nrow=5)
legend_cb <- get_legend(erisma_3waysorted_100 + theme(legend.position="bottom", legend.justification="center"))
sitewise_plot <- plot_grid(all5taxa_twoplots_cb, legend_cb, ncol=1, rel_heights = c(5,.2))
sitewise_plot
all5taxa_twoplots_cb <- plot_grid(zygo_3way_cb + theme(legend.position="none"),
zygo_3waysorted_100 + theme(legend.position="none"),
oxali_3way_cb + theme(legend.position="none"),
oxali_3waysorted_100 + theme(legend.position="none"),
gerani_3way_cb + theme(legend.position="none"),
gerani_3waysorted_100 + theme(legend.position="none"),
combret_3way_cb + theme(legend.position="none"),
combret_3waysorted_100 + theme(legend.position="none"),
erisma_3way_cb + theme(legend.position="none"),
erisma_3waysorted_100 + theme(legend.position="none"),
labels=c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J"), ncol=2, nrow=5)
legend_cb <- get_legend(erisma_3waysorted_100 + theme(legend.position="bottom", legend.justification="center"))
sitewise_plot <- plot_grid(all5taxa_twoplots_cb, legend_cb, ncol=1, rel_heights = c(5,.2))
sitewise_plot
all5taxa_twoplots_cb <- plot_grid(zygo_3way_cb + theme(legend.position="none"),
zygo_3waysorted_100 + theme(legend.position="none"),
oxali_3way_cb + theme(legend.position="none"),
oxali_3waysorted_100 + theme(legend.position="none"),
gerani_3way_cb + theme(legend.position="none"),
gerani_3waysorted_100 + theme(legend.position="none"),
combret_3way_cb + theme(legend.position="none"),
combret_3waysorted_100 + theme(legend.position="none"),
erisma_3way_cb + theme(legend.position="none"),
erisma_3waysorted_100 + theme(legend.position="none"),
labels=c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J"), ncol=2, nrow=5)
legend_cb <- get_legend(erisma_3waysorted_100 + theme(legend.position="bottom", legend.justification="center"))
sitewise_plot <- plot_grid(all5taxa_twoplots_cb, legend_cb, ncol=1, rel_heights = c(5,.2))
sitewise_plot
all5taxa_orderedbygene_cb <- plot_grid(zygog_3waysorted_cb + theme(legend.position="none"),
oxalig_3waysorted_cb + theme(legend.position="none"),
geranig_3waysorted_cb + theme(legend.position="none"),
combretg_3waysorted_cb + theme(legend.position="none"),
erismag_3waysorted_cb + theme(legend.position="none"),
labels=c("A", "B", "C", "D", "E"),
align = 'v', hjust = -1, ncol=1, nrow=5)
#Making a plot with only one legend and one title:
legend_g_cb <- get_legend(erismag_3waysorted_cb + theme(legend.position="bottom", legend.justification="center"))
genewiseplot_cb <- plot_grid(all5taxa_orderedbygene_cb, legend_g_cb, ncol=1, rel_heights = c(5,.2))
genewiseplot_cb
all5taxa_orderedbygene_cb <- plot_grid(zygog_3waysorted_cb + theme(legend.position="none"),
oxalig_3waysorted_cb + theme(legend.position="none"),
geranig_3waysorted_cb + theme(legend.position="none"),
combretg_3waysorted_cb + theme(legend.position="none"),
erismag_3waysorted_cb + theme(legend.position="none"),
labels=c("A", "B", "C", "D", "E"),
align = 'v', hjust = -1, ncol=1, nrow=5)
#Making a plot with only one legend and one title:
legend_g_cb <- get_legend(erismag_3waysorted_cb + theme(legend.position="bottom", legend.justification="center"))
genewiseplot_cb <- plot_grid(all5taxa_orderedbygene_cb, legend_g_cb, ncol=1, rel_heights = c(5,.2))
genewiseplot_cb
all5taxa_twoplots_cb <- plot_grid(zygo_3way_cb + theme(legend.position="none"),
zygo_3waysorted_100 + theme(legend.position="none"),
oxali_3way_cb + theme(legend.position="none"),
oxali_3waysorted_100 + theme(legend.position="none"),
gerani_3way_cb + theme(legend.position="none"),
gerani_3waysorted_100 + theme(legend.position="none"),
combret_3way_cb + theme(legend.position="none"),
combret_3waysorted_100 + theme(legend.position="none"),
erisma_3way_cb + theme(legend.position="none"),
erisma_3waysorted_100 + theme(legend.position="none"),
labels=c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J"), ncol=2, nrow=5)
legend_cb <- get_legend(erisma_3waysorted_100 + theme(legend.position="bottom", legend.justification="center"))
sitewise_plot <- plot_grid(all5taxa_twoplots_cb, legend_cb, ncol=1, rel_heights = c(5,.2))
sitewise_plot
all5taxa_orderedbygene_cb <- plot_grid(zygog_3waysorted_cb + theme(legend.position="none"),
oxalig_3waysorted_cb + theme(legend.position="none"),
geranig_3waysorted_cb + theme(legend.position="none"),
combretg_3waysorted_cb + theme(legend.position="none"),
erismag_3waysorted_cb + theme(legend.position="none"),
labels=c("A", "B", "C", "D", "E"),
align = 'v', hjust = -1, ncol=1, nrow=5)
#Making a plot with only one legend and one title:
legend_g_cb <- get_legend(erismag_3waysorted_cb + theme(legend.position="bottom", legend.justification="center"))
genewiseplot_cb <- plot_grid(all5taxa_orderedbygene_cb, legend_g_cb, ncol=1, rel_heights = c(5,.2))
genewiseplot_cb
knitr::opts_chunk$set(echo = TRUE)
library(treespace)
library(adegenet)
library(adegraphics)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(phangorn)
library(cowplot)
getwd()
setwd(getwd())
setwd(getwd())
setwd(getwd())
#reading the nexus file with all the trees and confirming they are unrooted
tree_allspp_nrtd <- read.nexus("./input_unrooted/allsptrees_tipsdropped_unrooted.nex")
#reading the nexus file with all the trees and confirming they are unrooted
tree_allspp_nrtd <- read.nexus("./input_unrooted/allsptrees_tipsdropped_unrooted.nex")
tree_allspp_nrtd
#class(tree_allspp_nrtd)
is.rooted.multiPhylo(tree_allspp_nrtd)
#reading the nexus file with all the species trees and confirming they are unrooted
tree_allspp_nrtd <- read.nexus("./input_unrooted/allsptrees_tipsdropped_unrooted.nex")
tree_allspp_nrtd
#class(tree_allspp_nrtd)
is.rooted.multiPhylo(tree_allspp_nrtd)
is.rooted.multiPhylo(tree_allspp_nrtd)
#reading the nexus file with all the species trees and confirming they are unrooted
tree_allspp_nrtd <- read.nexus("./input_unrooted/allsptrees_tipsdropped_unrooted.nex")
tree_allspp_nrtd
#class(tree_allspp_nrtd)
is.rooted.multiPhylo(tree_allspp_nrtd)
tree_names_allspp_nrtd <- names(tree_allspp_nrtd)
tree_names_allspp_nrtd
tree_names_allspp_nrtd
treespace_allspp_nrtd <- treespace(tree_allspp_nrtd, method = "RF", nf = 18)
#If you see "Zero distance(s)" you can check below and look for the tree(s) that are identical
#head(treespace_allspp_nrtd)
#Here, iq_ex_c distance fom iq_ex_bs is 0, meaning that these two trees have no differences
#Now you can see the values of the PCoA axis
#head(treespace_allspp_nrtd$pco$li)
head(treespace_allspp_nrtd)
head(treespace_allspp_nrtd$pco$li)
#Eigen values are measurements of variance, so to calculate the percentage explained by each axis, just divide the eigen value by the sum of all eigen values
round(treespace_allspp_nrtd$pco$eig/sum(treespace_allspp_nrtd$pco$eig),3) #the number three indicates three digits
#Axis1 = 0.345, Axis2 = 0.202, Axis3 = 0.115; Axis4 = 0.083, Axis5 = 0.069
id_cluster_nrtd <- findGroves(treespace_allspp_nrtd, method = "RF")
y
